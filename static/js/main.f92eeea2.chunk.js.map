{"version":3,"sources":["components/Header.js","Button.js","components/Table.js","components/TextField.js","components/ClearButton.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Button","color","onClick","e","row","document","getElementById","insertRow","cell1","insertCell","cell2","style","backgroundColor","innerHTML","value","className","Table","id","class","TextField","onSubmit","preventDefault","type","ClearButton","rows","length","firstRow","tBody","tBodies","cloneNode","appendChild","replaceChild","App","align","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wLAUeA,EAVA,WACb,OACE,iCACE,iCACE,sDCkBOC,EArBA,WACb,IAAIC,GAAQ,EAiBZ,OAAO,iCAAQ,wBAAQC,QAfT,SAACC,GACb,IACIC,EADQC,SAASC,eAAe,aACpBC,YAEZC,EAAQJ,EAAIK,WAAW,GACvBC,EAAQN,EAAIK,WAAW,GAC3BD,EAAMG,MAAMC,gBAAmBX,EAAQ,YAAc,WACrDS,EAAMC,MAAMC,gBAAmBX,EAAQ,YAAc,WACrDA,GAASA,EAGTO,EAAMK,UAAa,4BACnBH,EAAMG,UAAYR,SAASC,eAAe,aAAaQ,MACvDT,SAASC,eAAe,aAAaQ,MAAQ,IAERC,UAAU,MAAlC,4BCHFC,EAhBC,WAEd,OACF,iCACI,uBAAOC,GAAI,YAAX,SACE,gCACE,+BACE,oBAAIC,MAAM,OACV,oBAAIA,MAAM,KAAV,6BCIKC,EAZG,WAChB,OACE,iCACA,sBAAMC,SAAU,SAAAjB,GAAOA,EAAEkB,kBAAzB,SACE,qDAEE,uBAAOC,KAAK,OAAOL,GAAG,sBCKfM,EAXK,WASlB,OAAQ,iCAAQ,wBAAQrB,QAPX,SAACC,GACDE,SAASC,eAAe,aAAakB,KAAKC,OAArD,IACIC,EAAWrB,SAASC,eAAe,aAAakB,KAAK,GACrDG,EAAQtB,SAASC,eAAe,aAAasB,QAAQ,GAAGC,WAAU,GACtEF,EAAMG,YAAYJ,GAClBrB,SAASC,eAAe,aAAayB,aAAaJ,EAAOtB,SAASC,eAAe,aAAasB,QAAQ,KAEhEb,UAAU,MAAlC,wBCiBHiB,MArBf,WACE,OACE,sBAAKjB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,gCACE,iCACA,sBAAKG,MAAM,cAAce,MAAM,OAA/B,+FACkF,uBADlF,yCAEsC,uBAAM,4BAG5C,cAAC,EAAD,IACA,cAAC,EAAD,IACA,0BAEF,cAAC,EAAD,IACA,cAAC,EAAD,QCTSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASC,eAAe,SAM1B4B,K","file":"static/js/main.f92eeea2.chunk.js","sourcesContent":["const Header = () => {\n  return(\n    <center>\n      <header>\n        <h1>Dailies Tracker</h1>\n      </header>\n      </center>\n  )\n}\n\nexport default Header\n","//import Checkbox from './components/Checkbox'\nconst Button = () => {\n  var color = true;\n\n  const click = (e) =>{\n    var table = document.getElementById(\"taskTable\")\n    var row = table.insertRow()\n\n    var cell1 = row.insertCell(0)\n    var cell2 = row.insertCell(1)\n    cell1.style.backgroundColor = (color)? \"AliceBlue\" : \"CornSilk\"\n    cell2.style.backgroundColor = (color)? \"AliceBlue\" : \"CornSilk\"\n    color = !color\n\n\n    cell1.innerHTML =  '<input type=\"checkbox\" />'\n    cell2.innerHTML = document.getElementById(\"textField\").value\n    document.getElementById(\"textField\").value = \"\"\n  }\n  return <center><button onClick={click} className='btn'> Add Daily </button></center>\n\n}\nexport default Button\n","const Table   = () => {\n\n  return(\n<center>\n    <table id =\"taskTable\" >\n      <tbody >\n        <tr >\n          <th class=\"c1\"></th>\n          <th class=\"c2\"> Task</th>\n        </tr>\n      </tbody>\n    </table>\n    </center>\n  )\n\n}\nexport default Table\n","const TextField = () => {\n  return(\n    <center>\n    <form onSubmit={e => { e.preventDefault(); }}>\n      <label>\n        Enter Task Here: \n        <input type=\"text\" id=\"textField\" />\n      </label>\n    </form>\n    </center>\n  )\n}\nexport default TextField\n","const ClearButton = () => {\n\n  const click =(e) =>{\n    var rows = document.getElementById(\"taskTable\").rows.length\n    var firstRow = document.getElementById(\"taskTable\").rows[0]\n    var tBody = document.getElementById(\"taskTable\").tBodies[0].cloneNode(false)\n    tBody.appendChild(firstRow)\n    document.getElementById(\"taskTable\").replaceChild(tBody, document.getElementById(\"taskTable\").tBodies[0])\n  }\n  return (<center><button onClick={click} className='btn'> Clear </button></center>)\n}\nexport default ClearButton\n","import Header from './components/Header'\nimport Button from './Button'\nimport Table from './components/Table'\nimport TextField from './components/TextField'\nimport ClearButton from './components/ClearButton'\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <div>\n        <center>\n        <div class=\"instruction\" align=\"left\">\n        1. Enter a task into the text field and click \"Add Daily\" to add it to the table. <br />\n        2. Dailies will reset every 24 hours. <br /><br />\n        </div>\n        </center>\n        <TextField />\n        <Button />\n        <br />\n      </div>\n      <Table />\n      <ClearButton />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}